
x-kafka-common: &kafka-common
  image: 'bitnami/kafka:latest'
  ports:
    - "9092:9092"
  networks:
    - kafka
  healthcheck:
    test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
    interval: 5s
    timeout: 10s
    retries: 3
    start_period: 30s
  restart: unless-stopped

x-kafka-env-common: &kafka-env-common
  ALLOW_PLAINTEXT_LISTENER: 'yes'
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093
  KAFKA_KRAFT_CLUSTER_ID: kafkadocker
  KAFKA_CFG_PROCESS_ROLES: controller,broker
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
  EXTRA_ARGS: "-Xms128m -Xmx256m"

services:

  emails:
    image: emails
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      KAFKA_BOOTSTRAP_SERVERS: kafka-0:9092
    networks:
      - kafka
    ports:
      - '4000:80'

  kafka-0:
    <<: *kafka-common
    environment:
      <<: *kafka-env-common
      KAFKA_CFG_NODE_ID: 0
    volumes:
      - kafka_0_data:/bitnami/kafka

  kafka-ui:
     container_name: kafka-ui
     image: provectuslabs/kafka-ui:latest
     volumes:
       - ./kafka-ui/credentials.yml:/etc/kafkaui/dynamic_config.yaml
     environment:
       DYNAMIC_CONFIG_ENABLED: 'true'
     depends_on:
       - kafka-0
     networks:
       - kafka
     ports:
       - '8080:8080'
     healthcheck:
       test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
       interval: 5s
       timeout: 10s
       retries: 3
       start_period: 30s
       
  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      #MYSQL_DATABASE: 'mycar'
      SERVER: '127.0.0.1'
      MYSQL_TCP_PORT: 3307
    ports: 
      - '3307:3307'
    expose:
      - '3307'
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - kafka
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 3
  
  mycarapi:
    build:
      context: .
    environment:
      DBHOST: mysql
      ASPNETCORE_ENVIRONMENT: Development
      KAFKA_BOOTSTRAP_SERVERS: kafka-0:9092
    depends_on:
      kafka-0:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka-ui:
        condition: service_healthy
    networks:
      - kafka
    ports:
      - '3000:80'
  

networks:
  kafka:

volumes:
  kafka_0_data:
    driver: local
  db-volume:
